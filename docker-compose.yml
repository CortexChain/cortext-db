version: '3.8'

services:
  postgres-master:
    image: postgres:16
    container_name: postgres-master
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: "12345a@A"
      POSTGRES_DB: contextdb
    volumes:
      - postgres-master-data:/var/lib/postgresql/data
      - ./init-master.sh:/docker-entrypoint-initdb.d/init-master.sh
    ports:
      - "5432:5432"
    networks:
      - pg-network
    mem_limit: 768m
    mem_reservation: 512m

  postgres-slave:
    image: postgres:16
    container_name: postgres-slave
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: "12345a@A"
      POSTGRES_DB: contextdb
    volumes:
      - postgres-slave-data:/var/lib/postgresql/data
      - ./init-slave.sh:/docker-entrypoint-initdb.d/init-slave.sh
    entrypoint: ["/bin/bash", "-c", "/docker-entrypoint-initdb.d/init-slave.sh && exec /usr/local/bin/docker-entrypoint.sh postgres"]
    depends_on:
      - postgres-master
    networks:
      - pg-network
    mem_limit: 768m
    mem_reservation: 512m

  # haproxy:
  #   image: haproxy:2.8
  #   container_name: haproxy
  #   volumes:
  #     - ./haproxy.cfg:/usr/local/etc/haproxy/haproxy.cfg
  #   ports:
  #     - "5433:5433"
  #   depends_on:
  #     - postgres-master
  #     - postgres-slave
  #   networks:
  #     - pg-network
  #   mem_limit: 256m
  #   mem_reservation: 128m

  nginx-proxy:
    image: nginx:1.24
    container_name: nginx-proxy
    volumes:
      - ./nginx-proxy.conf:/etc/nginx/nginx.conf:ro
    ports:
      - "5434:5434"  # Write operations (Master)
      - "5435:5435"  # Read operations (Slave)
      - "8080:8080"  # Monitoring/Stats
    depends_on:
      - postgres-master
      - postgres-slave
    networks:
      - pg-network
    mem_limit: 256m
    mem_reservation: 128m
    restart: unless-stopped

volumes:
  postgres-master-data:
  postgres-slave-data:

networks:
  pg-network:
    driver: bridge